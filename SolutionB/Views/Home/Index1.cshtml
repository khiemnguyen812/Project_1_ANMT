@{
    ViewBag.Title = "Home Page";
}
<link href="~/Content/assets/styles/dropzoneStyle.css" rel="stylesheet" />

@section naviheader {
    <ul class="navbar-nav">
        <li class="nav-item">
            <a class="nav-link" data-widget="pushmenu" href="#" role="button"><i class="fas fa-bars"></i></a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/home/index2" class="nav-link" style="font-size: larger; ">Câu 1</a>
        </li>
    </ul>
}
<section class="content">
    <input type="hidden" id="typeFile" />
    <input type="file" id="encryptedFile" style="display: none;" />

    <div class="text-center" style="display: flex; align-items: center; justify-content: center; height: fit-content;">
        <form class="dropzone-box" style="width: 50%;">
            <h2>Tải file lên</h2>
            <p>
                Chọn tập tin cần mã hoá
            </p>
            <div class="dropzone-area" style="display: flex; flex-direction: column; align-items: center; justify-content: center;">
                <div class="file-upload-icon">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" stroke-width="2"
                         stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                        <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                        <path d="M14 3v4a1 1 0 0 0 1 1h4" />
                        <path d="M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z" />
                    </svg>
                </div>
                <p>Click to upload or drag and drop</p>
                <input type="file" required id="upload-file" name="uploaded-file">
                <p class="message">Không có file được chọn</p>
            </div>
            <div class="row" style="margin-top:20px">
                <div class="col">
                    <div class="form-group">
                        <label for="dropdown1">Kích thước AES Key</label>
                        <select class="form-control" id="AESSize">
                            <option value="AES128">128 bit</option>
                            <option value="AES192">192 bit</option>
                            <option value="AES256">256 bit</option>
                        </select>
                    </div>
                </div>
                <div class="col">
                    <div class="form-group">
                        <label for="dropdown2">Kích thước RSA Key</label>
                        <select class="form-control" id="RSASize">
                            <option value="1">1024</option>
                            <option value="2">2048</option>
                            <option value="3">4096</option>
                        </select>
                    </div>
                </div>
            </div>
            <div class="dropzone-actions">
                <button type="reset">
                    Xóa file
                </button>
                <button id="submit-button" type="submit">
                    Mã hóa file
                </button>
            </div>
        </form>
    </div>
    <div class="col">
        <div class="form-group" style="height: fit-content">
            <label for="KsKey">Khoá bí mật Ks:</label>
            <textarea type="text" class="form-control r-12" id="KsKey" name="KsKey" readonly style="resize:none"></textarea>
        </div>
    </div>
    <div class="col">
        <div class="form-group" style="height: 300px">
            <label for="KsKey">Nội dung file sau khi mã hóa:</label>
            <textarea type="text" class="form-control r-12" id="encryptedContent_C" name="encryptedContent_C" readonly style="height: 90%; resize:none"></textarea>
        </div>
    </div>
    <div class="text-center" style="margin-bottom:10px; margin-top:30px">
        <button class="btn btn-primary" id="downloadC">
            Tải file đã được mã hóa bằng thuật toán AES
        </button>
    </div>
    <div class="row col-md-12">
        <div class="col">
            <div class="form-group" style="height: 300px">
                <label for="KpublicX509">Public Key(X.509 Format):</label>
                <textarea type="text" class="form-control r-12" id="KpublicX509" name="KpublicX509" readonly style="height: 90%; resize: none"></textarea>
                <input type="hidden" id="Kpublic" />
            </div>
        </div>
        <div class="col">
            <div class="form-group" style="height: 300px">
                <label for="KprivatePkcs8">Private Key(PKCS8 Format):</label>
                <textarea type="text" class="form-control r-12" id="KprivatePkcs8" name="KprivatePkcs8" readonly style="height: 90%; resize: none"></textarea>
                <input type="hidden" id="Kprivate" />
            </div>
        </div>
    </div>
    <div class="col">
        <div class="form-group" style="height: 300px">
            <label for="Kx">Mã hoá khoá Ks bằng khoá Kpublic (Kx):</label>
            <textarea type="text" class="form-control r-12" id="Kx" name="Kx" readonly style="height: 90%; resize: none"></textarea>
        </div>
    </div>
    <div class="col">
        <div class="form-group" style="height: 100px">
            <label for="Kx">SHA-1 của Kprivate(HKprivate):</label>
            <textarea type="text" class="form-control r-12" id="HKprivate" name="HKprivate" readonly style="height: 90%; resize: none"></textarea>
        </div>
    </div>
    <div class="row col-md-12" style="margin-top:50px">
        <div class="col text-center" style="margin-bottom:10px">
            <button class="btn btn-primary" id="downloadHKprivate">
                Tải xuống Kx kèm theo giá trị hash SHA-1 của Kprivate
            </button>
        </div>
        <div class="col text-center" style="margin-bottom:10px">
            <button class="btn btn-primary" id="downloadKprivate">
                Tải xuống private key
            </button>
        </div>
    </div>
</section>


@section scripts {
    <script src="~/Content/assets/js/dropzone.js"></script>
    <script>

        document.querySelector(".dropzone-box").addEventListener("submit", (e) => {
            e.preventDefault();
            const fileInput = document.getElementById("upload-file");
            const file = fileInput.files[0];
            if (file) {
                var formData = new FormData();
                const aesSize = document.getElementById("AESSize").value;
                const rsaSize = document.getElementById("RSASize").value;
                formData.append('file', file);
                formData.append('AESSize', aesSize);
                formData.append('RSASize', rsaSize);

                fetch('@Url.Action("EncryptFile", "Home")', {
                    method: 'POST',
                    body: formData
                })
                    .then(response => response.json())
                    .then(data => {
                        console.log(data);
                        if (data.success) {
                            document.getElementById('KsKey').value = data.aesKey_Ks || '';
                            document.getElementById('Kx').value = data.encryptedAESKeybyRSA || '';
                            document.getElementById('KpublicX509').value = data.kpublic || '';
                            document.getElementById('KprivatePkcs8').value = data.kprivate || '';
                            document.getElementById('HKprivate').value = data.hKprivate || '';
                            document.getElementById('encryptedContent_C').value = data.encryptedContent_C || '';
                            document.getElementById('typeFile').value = data.fileExtension || '';

                            // Assuming 'downloadUrl' is the URL for downloading the encrypted file
                            if (data.downloadUrl) {
                                // Find the download button and set its onclick event to download the file
                                const downloadButton = document.getElementById('downloadC');
                                downloadButton.onclick = function () {
                                    window.location.href = data.downloadUrl;
                                };
                                // Optionally, enable the button if it was disabled
                                downloadButton.disabled = false;
                            }
                            showToast("Mã hóa file thành công!");
                        } else {
                            alert(data.message);
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                    });
            }
        });


        document.getElementById('downloadKprivate').addEventListener('click', function () {
            var Kprivate = document.getElementById('KprivatePkcs8').value;
            var blob = new Blob([Kprivate], { type: 'text/plain' });
            var url = window.URL.createObjectURL(blob);
            var a = document.createElement('a');
            a.href = url;
            a.download = 'Kprivate'; // Specify the filename without an extension
            document.body.appendChild(a); // We need to append the element to the dom -> this is invisible
            a.click(); // simulate click to start download
            document.body.removeChild(a); // remove the element after download
            window.URL.revokeObjectURL(url); // release the object URL
        });

        document.getElementById('downloadHKprivate').addEventListener('click', function () {
            var Kx = document.getElementById('Kx').value;
            var HKprivate = document.getElementById('HKprivate').value;

            // Create a JSON object
            var data = {
                Kx: Kx,
                HKprivate: HKprivate
            };

            // Convert the JSON object to a string
            var jsonString = JSON.stringify(data);

            // Create a Blob object with the JSON string
            var blob = new Blob([jsonString], { type: 'application/json' });

            // Create a URL for the Blob object
            var url = window.URL.createObjectURL(blob);

            // Create a temporary anchor element and trigger the download
            var a = document.createElement('a');
            a.href = url;
            a.download = 'Kx_HKprivate.json';
            document.body.appendChild(a); // Append the element to the DOM (this is invisible to the user)
            a.click(); // Simulate a click to start the download
            document.body.removeChild(a); // Remove the element after the download starts
            window.URL.revokeObjectURL(url); // Release the object URL
        });
    </script>
}

