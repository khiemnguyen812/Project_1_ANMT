@{
    ViewBag.Title = "Index2";
}
<link href="~/Content/assets/styles/dropzoneStyle.css" rel="stylesheet" />

@section naviheader {
    <ul class="navbar-nav">
        <li class="nav-item">
            <a class="nav-link" data-widget="pushmenu" href="#" role="button"><i class="fas fa-bars"></i></a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/home/index2" class="nav-link" style="font-size: larger;">Câu 2</a>
        </li>
    </ul>
}


<section class="content">
    <input type="hidden" id="fileType" />

    <div class="text-center" style="display: flex; align-items: center; justify-content: space-around; height: fit-content;">
        <form class="dropzone-box" id="cipherFile_Upload" style="width: 50%;">
            <h2>Tệp mã hoá</h2>
            <p>
                Chọn tập tin cần giải mã
            </p>
            <div class="dropzone-area" style="display: flex; flex-direction: column; align-items: center; justify-content: center;">
                <div class="file-upload-icon">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" stroke-width="2"
                         stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                        <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                        <path d="M14 3v4a1 1 0 0 0 1 1h4" />
                        <path d="M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z" />
                    </svg>
                </div>
                <p>Click to upload or drag and drop</p>
                <input type="file" required id="upload-file-cipherFile" name="uploaded-file-cipherFile">
                <p class="message">Không có file được chọn</p>
            </div>
            <div class="dropzone-actions">
                <button type="reset">
                    Xóa file
                </button>
                <button id="submit-button" type="submit">
                    Giải mã file
                </button>
            </div>
        </form>
        <form class="dropzone-box" id="Kx_HKPrivate_Upload" style="width: 50%;">
            <h2>Kx + HKprivate</h2>
            <p>
                Chọn tập tin lưu Kx Và HKprivate
            </p>
            <div class="dropzone-area" style="display: flex; flex-direction: column; align-items: center; justify-content: center;">
                <div class="file-upload-icon">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" stroke-width="2"
                         stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                        <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                        <path d="M14 3v4a1 1 0 0 0 1 1h4" />
                        <path d="M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z" />
                    </svg>
                </div>
                <p>Click to upload or drag and drop</p>
                <input type="file" required id="upload-file-Kx-HKprivate" name="upload-file-Kx-HKprivate" accept=".json">
                <p class="message">Không có file được chọn</p>
            </div>
            <div class="dropzone-actions">
                <button type="reset">
                    Huỷ
                </button>
                <button type="submit">
                    Lấy dữ liệu
                </button>
            </div>
        </form>
    </div>
    <div class="col" style="margin-top:20px">
        <div class="text-center">
            <input type="file" id="KprivateFileInput" style="display:none;" />
            <button id="insertKprivateFile" class="btn btn-primary">Chọn file Kprivate</button>
        </div>

        <div class="form-group" style="height: 300px">
            <label for="Kprivate">Khoá Kprivate:</label>
            <textarea type="text" class="form-control r-12" id="Kprivate" name="Kprivate" style="height: 90%;resize:none"></textarea>
            <small class="text-danger" id="decryptMessage" style="display:inherit;"></small>
        </div>
        <div class="text-center">
            <button class="btn btn-primary" id="decryptBtn">Giải mã</button>
        </div>
    </div>
    <div class="row col-md-12" style="margin-top:30px">
        <div class="col">
            <div class="form-group" style="height: 300px">
                <label for="Kx">Kx</label>
                <textarea type="text" class="form-control r-12" id="Kx" name="Kx" readonly style="height: 90%; resize: none"></textarea>
            </div>
        </div>
        <div class="col">
            <div class="form-group" style="height: 300px">
                <label for="HKprivate">HKprivate</label>
                <textarea type="text" class="form-control r-12" id="HKprivate" name="HKprivate" readonly style="height: 90%; resize: none"></textarea>
            </div>
        </div>
    </div>
    <div class="col">
        <div class="form-group" style="height: 300px">
            <label for="Ks">Ks sau khi giải mã bằng Kprivate:</label>
            <textarea type="text" class="form-control r-12" id="Ks" name="Ks" readonly style="height: 90%; resize: none"></textarea>
        </div>
    </div>
    <div class="col">
        <div class="form-group" style="height: 300px">
            <label for="origin">Nội dung file gốc</label>
            <textarea type="text" class="form-control r-12" id="origin" name="origin" readonly style="height: 90%; resize: none"></textarea>
        </div>
    </div>
    <div class="text-center" style="margin-bottom:10px; margin-top:30px">
        <button class="btn btn-primary" id="downloadOrigin">
            Tải file đã được giải mã
        </button>
    </div>
</section>

@section scripts {
	<script src="~/content/assets/js/dropzone2.js"></script>
    <script>
        function toggleSpinner(show) {
            var spinner = document.getElementById('spinnerContainer');
            console.log("aksdn");
            spinner.style.display = show ? 'block' : 'none';
            if (show) {
                $('#spinner').show();
                $('#overlay').show();
            } else {
                $('#spinner').hide();
                $('#overlay').hide();
            }
        }

        document.getElementById('insertKprivateFile').addEventListener('click', function () {
            document.getElementById('KprivateFileInput').click();
        });

        document.getElementById('KprivateFileInput').addEventListener('change', function (event) {
            var file = event.target.files[0];
            if (file) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    var content = e.target.result;
                    document.getElementById('Kprivate').value = content;
                };
                reader.readAsText(file);
            }
        });

        document.getElementById('decryptBtn').addEventListener('click', function () {
            // Your decryption logic here
            const fileInput = document.getElementById("upload-file-cipherFile");
            const file = fileInput.files[0];
            console.log("Vao giai ma");
            if (file) {
                // Create FormData and append the file
                var formData = new FormData();
                console.log("1");
                const Kprivate = document.getElementById("Kprivate").value;
                console.log("2");
                const HKprivate = document.getElementById("HKprivate").value;
                console.log("3");
                const Kx = document.getElementById("Kx").value;
                console.log("4");
                formData.append('cipher', file);
                formData.append('Kprivate', Kprivate);
                formData.append('HKprivate', HKprivate);
                formData.append('Kx', Kx);
                console.log(formData);
                // Fetch API to send the file to server
                toggleSpinner(true); // Show the spinner
                fetch('@Url.Action("DecryptFile", "Home")', {
                    method: 'POST',
                    body: formData
                })
                    .then(response => response.json())
                    .then(data => {
                        console.log(data);
                        if (data.success) {
                            document.getElementById('Ks').value = data.ks || '';
                            document.getElementById('fileType').value = data.fileType || '';
                            document.getElementById('origin').value = data.origin || '';

                            // Assuming 'downloadUrl' is the URL for downloading the encrypted file
                            if (data.downloadUrl) {
                                // Find the download button and set its onclick event to download the file
                                const downloadButton = document.getElementById('downloadOrigin');
                                downloadButton.onclick = function () {
                                    window.location.href = data.downloadUrl;
                                };
                                // Optionally, enable the button if it was disabled
                                downloadButton.disabled = false;
                            }
                            toggleSpinner(false); // Show the spinner
                            showToast("Giải mã file thành công!");
                            document.getElementById('decryptMessage').innerText = "";
                        } else {
                            alert(data.message);
                            document.getElementById('decryptMessage').innerText = data.message;
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                    });
            }
        });

        document.getElementById('Kx_HKPrivate_Upload').addEventListener("submit", (e) => {
            e.preventDefault();
            const fileInput = document.getElementById("upload-file-Kx-HKprivate");
            const file = fileInput.files[0];
            if (file) {
                // Create FormData and append the file
                var formData = new FormData();
                formData.append('file', file);
                console.log(formData);
                // Fetch API to send the file to server
                fetch('@Url.Action("InsertKxHKprivateFile", "Home")', {
                    method: 'POST',
                    body: formData
                })
                    .then(response => response.json())
                    .then(data => {
                        console.log(data);
                        if (data.success) {
                            document.getElementById('Kx').value = data.kx || '';
                            document.getElementById('HKprivate').value = data.hKprivate || '';
                        } else {
                            alert(data.message);
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                    });
            }
        }); // This was missing
    </script>
}
